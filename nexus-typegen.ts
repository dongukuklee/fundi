/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./src/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values.
     */
    bigInt<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "BigInt";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values.
     */
    bigInt<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "BigInt";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AlarmInputData: { // input type
    content?: string | null; // String
    isConfirm?: boolean | null; // Boolean
    isVisible?: boolean | null; // Boolean
    title?: string | null; // String
    type?: NexusGenEnums['AlarmTypes'] | null; // AlarmTypes
  }
  ContractInput: { // input type
    endDate: string; // String!
    lastYearEarning: number; // Int!
    startDate: string; // String!
    terms: number; // Int!
    type: NexusGenEnums['ContractTypes']; // ContractTypes!
  }
  CreatorInput: { // input type
    birthYear?: number | null; // Int
    channelTitle?: string | null; // String
    channelUrl?: string | null; // String
    description?: string | null; // String
    isVisible?: boolean | null; // Boolean
    name?: string | null; // String
  }
  CreatorMonthlyInfoInpuTypes: { // input type
    income?: NexusGenScalars['BigInt'] | null; // BigInt
    month?: string | null; // String
    subscriber?: NexusGenScalars['BigInt'] | null; // BigInt
    views?: NexusGenScalars['BigInt'] | null; // BigInt
  }
  FundingDescriptionInputTypes: { // input type
    content: string; // String!
    id?: number | null; // Int
    title: string; // String!
  }
  FundingInput: { // input type
    description?: NexusGenInputs['FundingDescriptionInputTypes'][] | null; // [FundingDescriptionInputTypes!]
    endDate: string; // String!
    isVisible: boolean; // Boolean!
    startDate: string; // String!
    status: NexusGenEnums['FundingStatus']; // FundingStatus!
    title: string; // String!
  }
  ImageInput: { // input type
    filename: string; // String!
    height: number; // Int!
    path_origin: string; // String!
    path_sq640: string; // String!
    path_w640: string; // String!
    width: number; // Int!
  }
}

export interface NexusGenEnums {
  AlarmTypes: "FUNDING" | "NOTICE" | "QNA"
  BannerTypes: "FUNDING" | "NONE" | "NOTICE"
  ContractTypes: "LOANS" | "OWENERSHIP_TRANSFER"
  FAQTypes: "ETC" | "PAYMENT" | "USAGE"
  FundingStatus: "CAMPAIGNING" | "EARLY_CLOSING" | "END" | "FAILED_CAMPAIGN" | "POST_CAMPAIGN" | "PRE_CAMPAIGN"
  ImageTypes: "creator" | "funding" | "notice" | "qna"
  QnAStatus: "AWAITING_RESPONSE" | "RESPONDED"
  QnATypes: "ETC" | "INVESTMENT" | "SETTLEMENT"
  Role: "ADMIN" | "INVESTOR" | "MANAGER"
  TransactionType: "DEPOSIT" | "WITHDRAW"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  BigInt: any
  DateTime: any
}

export interface NexusGenObjects {
  AccountBond: { // root type
    balance: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fundingId: number; // Int!
    id: number; // Int!
    ownerId: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AccountCash: { // root type
    balance: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Alarm: { // root type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isConfirm: boolean; // Boolean!
    isVisible: boolean; // Boolean!
    sentTime: NexusGenScalars['DateTime']; // DateTime!
    title: string; // String!
    type: NexusGenEnums['AlarmTypes']; // AlarmTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Auth: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: number; // Int!
    isVerified: boolean; // Boolean!
    nickName?: string | null; // String
    pincode?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Banner: { // root type
    id: number; // Int!
  }
  BannerModule: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    targetId?: number | null; // Int
    title: string; // String!
    types?: NexusGenEnums['BannerTypes'] | null; // BannerTypes
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Contract: { // root type
    amountRecieved: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    endDate: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    lastYearEarning: NexusGenScalars['BigInt']; // BigInt!
    startDate: NexusGenScalars['DateTime']; // DateTime!
    terms: number; // Int!
    type: NexusGenEnums['ContractTypes']; // ContractTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Creator: { // root type
    birthYear?: number | null; // Int
    channelTitle: string; // String!
    channelUrl: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CreatorMonthlyInfo: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    income: NexusGenScalars['BigInt']; // BigInt!
    month: NexusGenScalars['DateTime']; // DateTime!
    subscriber: NexusGenScalars['BigInt']; // BigInt!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    views: NexusGenScalars['BigInt']; // BigInt!
  }
  FAQ: { // root type
    answer?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    question?: string | null; // String
    type: NexusGenEnums['FAQTypes']; // FAQTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Funding: { // root type
    bondPrice: NexusGenScalars['BigInt']; // BigInt!
    bondsTotalNumber: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currentSettlementRound: number; // Int!
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    lastTransactionAmount: NexusGenScalars['BigInt']; // BigInt!
    remainingBonds: NexusGenScalars['BigInt']; // BigInt!
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status: NexusGenEnums['FundingStatus']; // FundingStatus!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FundingDescripton: { // root type
    content: string; // String!
    id?: number | null; // Int
    title: string; // String!
  }
  FundingSettlement: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    monthlySettlementAmount: NexusGenScalars['BigInt']; // BigInt!
    round: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  IDVerification: { // root type
    birthDay: NexusGenScalars['DateTime']; // DateTime!
    certificationCode: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expiration: NexusGenScalars['DateTime']; // DateTime!
    gender: number; // Int!
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Image: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    filename: string; // String!
    height: number; // Int!
    id: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    width: number; // Int!
  }
  Mutation: {};
  Notice: { // root type
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    title?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  QnA: { // root type
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    reply?: string | null; // String
    title?: string | null; // String
    type: NexusGenEnums['QnATypes']; // QnATypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
  }
  Query: {};
  TransactionBond: { // root type
    amount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    title: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  TransactionCash: { // root type
    accumulatedCash: NexusGenScalars['BigInt']; // BigInt!
    amount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    title: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  TransactionSettlement: { // root type
    additionalSettleMentAmount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    round: number; // Int!
    settlementAmount: NexusGenScalars['BigInt']; // BigInt!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: number; // Int!
    nickName?: string | null; // String
    role: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VirtualAccount: { // root type
    amt: string; // String!
    authDate: string; // String!
    buyerName: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: string; // String!
    goodsName: string; // String!
    id: number; // Int!
    moid: string; // String!
    tid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    vbankBankNm: string; // String!
    vbankExpDate: string; // String!
    vbankNum: string; // String!
  }
  WithdrawalAccount: { // root type
    acntNo: string; // String!
    bankCode: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AccountBond: { // field return type
    balance: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    funding: NexusGenRootTypes['Funding'] | null; // Funding
    fundingId: number; // Int!
    id: number; // Int!
    investmentAmount: NexusGenScalars['BigInt'] | null; // BigInt
    owner: NexusGenRootTypes['User'] | null; // User
    ownerId: number; // Int!
    settlementAmount: Array<NexusGenScalars['BigInt'] | null> | null; // [BigInt]
    transactionSettlement: NexusGenRootTypes['TransactionSettlement'][]; // [TransactionSettlement!]!
    transactions: NexusGenRootTypes['TransactionBond'][]; // [TransactionBond!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AccountCash: { // field return type
    balance: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    owner: NexusGenRootTypes['User'] | null; // User
    transactions: NexusGenRootTypes['TransactionCash'][]; // [TransactionCash!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Alarm: { // field return type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isConfirm: boolean; // Boolean!
    isVisible: boolean; // Boolean!
    sentTime: NexusGenScalars['DateTime']; // DateTime!
    title: string; // String!
    type: NexusGenEnums['AlarmTypes']; // AlarmTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Auth: { // field return type
    IDVerification: NexusGenRootTypes['IDVerification'] | null; // IDVerification
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: number; // Int!
    isVerified: boolean; // Boolean!
    nickName: string | null; // String
    pincode: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    withdrawalAccount: NexusGenRootTypes['WithdrawalAccount'] | null; // WithdrawalAccount
  }
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Banner: { // field return type
    banner: NexusGenRootTypes['BannerModule'] | null; // BannerModule
    id: number; // Int!
  }
  BannerModule: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    images: NexusGenRootTypes['Image'] | null; // Image
    isVisible: boolean; // Boolean!
    targetId: number | null; // Int
    title: string; // String!
    types: NexusGenEnums['BannerTypes'] | null; // BannerTypes
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Contract: { // field return type
    amountRecieved: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    creator: NexusGenRootTypes['Creator'] | null; // Creator
    endDate: NexusGenScalars['DateTime']; // DateTime!
    funding: NexusGenRootTypes['Funding'] | null; // Funding
    id: number; // Int!
    lastYearEarning: NexusGenScalars['BigInt']; // BigInt!
    startDate: NexusGenScalars['DateTime']; // DateTime!
    terms: number; // Int!
    type: NexusGenEnums['ContractTypes']; // ContractTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Creator: { // field return type
    birthYear: number | null; // Int
    channelTitle: string; // String!
    channelUrl: string; // String!
    contract: Array<NexusGenRootTypes['Contract'] | null> | null; // [Contract]
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    creatorMonthlyInfo: Array<NexusGenRootTypes['CreatorMonthlyInfo'] | null> | null; // [CreatorMonthlyInfo]
    description: string; // String!
    fundings: NexusGenRootTypes['Funding'][]; // [Funding!]!
    id: number; // Int!
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    isLikedUser: boolean | null; // Boolean
    isVisible: boolean; // Boolean!
    likedUser: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CreatorMonthlyInfo: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    income: NexusGenScalars['BigInt']; // BigInt!
    month: NexusGenScalars['DateTime']; // DateTime!
    subscriber: NexusGenScalars['BigInt']; // BigInt!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    views: NexusGenScalars['BigInt']; // BigInt!
  }
  FAQ: { // field return type
    answer: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isVisible: boolean; // Boolean!
    question: string | null; // String
    type: NexusGenEnums['FAQTypes']; // FAQTypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Funding: { // field return type
    accountInvestor: NexusGenRootTypes['AccountBond'][]; // [AccountBond!]!
    accountManager: NexusGenRootTypes['AccountBond'] | null; // AccountBond
    bondPrice: NexusGenScalars['BigInt']; // BigInt!
    bondsTotalNumber: NexusGenScalars['BigInt']; // BigInt!
    contract: NexusGenRootTypes['Contract'] | null; // Contract
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    creator: Array<NexusGenRootTypes['Creator'] | null> | null; // [Creator]
    currentSettlementRound: number; // Int!
    description: Array<NexusGenRootTypes['FundingDescripton'] | null> | null; // [FundingDescripton]
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    fundingSettlement: Array<NexusGenRootTypes['FundingSettlement'] | null> | null; // [FundingSettlement]
    id: number; // Int!
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    isLikedUser: boolean | null; // Boolean
    lastTransactionAmount: NexusGenScalars['BigInt']; // BigInt!
    likedUser: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    remainingBonds: NexusGenScalars['BigInt']; // BigInt!
    startDate: NexusGenScalars['DateTime'] | null; // DateTime
    status: NexusGenEnums['FundingStatus']; // FundingStatus!
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FundingDescripton: { // field return type
    content: string; // String!
    id: number | null; // Int
    title: string; // String!
  }
  FundingSettlement: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    monthlySettlementAmount: NexusGenScalars['BigInt']; // BigInt!
    round: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  IDVerification: { // field return type
    birthDay: NexusGenScalars['DateTime']; // DateTime!
    certificationCode: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expiration: NexusGenScalars['DateTime']; // DateTime!
    gender: number; // Int!
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Image: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    creator: NexusGenRootTypes['Creator'] | null; // Creator
    filename: string; // String!
    funding: NexusGenRootTypes['Funding'] | null; // Funding
    height: number; // Int!
    id: number; // Int!
    notice: NexusGenRootTypes['Notice'] | null; // Notice
    origin: string; // String!
    qna: NexusGenRootTypes['QnA'] | null; // QnA
    sq640: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    w640: string; // String!
    width: number; // Int!
  }
  Mutation: { // field return type
    OAuthLogin: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    alterSequence: boolean | null; // Boolean
    chargeTheDeposit: NexusGenRootTypes['AccountCash'] | null; // AccountCash
    checkAlarm: boolean | null; // Boolean
    createBanner: NexusGenRootTypes['Banner'] | null; // Banner
    createBannerModule: NexusGenRootTypes['BannerModule'] | null; // BannerModule
    createContract: NexusGenRootTypes['Contract'] | null; // Contract
    createCreator: NexusGenRootTypes['Creator'] | null; // Creator
    createCreatorMonthlyInfos: NexusGenRootTypes['CreatorMonthlyInfo'] | null; // CreatorMonthlyInfo
    createFAQ: NexusGenRootTypes['FAQ'] | null; // FAQ
    createFunding: NexusGenRootTypes['Funding'] | null; // Funding
    createImage: NexusGenRootTypes['Image'] | null; // Image
    createNotice: NexusGenRootTypes['Notice'] | null; // Notice
    createPincode: string | null; // String
    createQnA: NexusGenRootTypes['QnA'] | null; // QnA
    createVirtualAccount: NexusGenRootTypes['VirtualAccount'] | null; // VirtualAccount
    fundingSettlement: NexusGenRootTypes['Funding'] | null; // Funding
    likeCreator: NexusGenRootTypes['Creator'] | null; // Creator
    likeFunding: NexusGenRootTypes['Funding'] | null; // Funding
    participateFunding: NexusGenRootTypes['Funding'] | null; // Funding
    registerWithdrawalAccount: NexusGenRootTypes['WithdrawalAccount'] | null; // WithdrawalAccount
    replyQuestion: NexusGenRootTypes['QnA'] | null; // QnA
    signOut: boolean | null; // Boolean
    signin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    updateBannerModule: boolean | null; // Boolean
    updateContract: NexusGenRootTypes['Contract'] | null; // Contract
    updateCreator: boolean | null; // Boolean
    updateCreatorMonthlyInfo: NexusGenRootTypes['CreatorMonthlyInfo'] | null; // CreatorMonthlyInfo
    updateFAQ: NexusGenRootTypes['FAQ'] | null; // FAQ
    updateFunding: boolean | null; // Boolean
    updateNotice: boolean | null; // Boolean
    updatePincode: string | null; // String
    updateQuestion: boolean | null; // Boolean
    updateWithdrawalAccount: boolean | null; // Boolean
    withdrawFunding: NexusGenRootTypes['AccountCash'] | null; // AccountCash
  }
  Notice: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    isVisible: boolean; // Boolean!
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  QnA: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    isVisible: boolean; // Boolean!
    reply: string | null; // String
    title: string | null; // String
    type: NexusGenEnums['QnATypes']; // QnATypes!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: number; // Int!
  }
  Query: { // field return type
    FAQs: Array<NexusGenRootTypes['FAQ'] | null> | null; // [FAQ]
    QnA: NexusGenRootTypes['QnA'] | null; // QnA
    QnAs: Array<NexusGenRootTypes['QnA'] | null> | null; // [QnA]
    alarmCount: number | null; // Int
    alarms: Array<NexusGenRootTypes['Alarm'] | null> | null; // [Alarm]
    balanceCash: NexusGenScalars['BigInt'] | null; // BigInt
    bannerModule: NexusGenRootTypes['BannerModule'] | null; // BannerModule
    bannerModules: Array<NexusGenRootTypes['BannerModule'] | null> | null; // [BannerModule]
    banners: Array<NexusGenRootTypes['Banner'] | null> | null; // [Banner]
    cancellationCharge: NexusGenScalars['BigInt'] | null; // BigInt
    checkPincode: boolean | null; // Boolean
    creator: NexusGenRootTypes['Creator'] | null; // Creator
    creators: NexusGenRootTypes['Creator'][]; // [Creator!]!
    funding: NexusGenRootTypes['Funding'] | null; // Funding
    fundings: NexusGenRootTypes['Funding'][]; // [Funding!]!
    getVirtualAccount: NexusGenRootTypes['VirtualAccount'] | null; // VirtualAccount
    getWithdrawalAccount: NexusGenRootTypes['WithdrawalAccount'] | null; // WithdrawalAccount
    myFundings: NexusGenRootTypes['Funding'][]; // [Funding!]!
    myQnA: Array<NexusGenRootTypes['QnA'] | null> | null; // [QnA]
    notice: NexusGenRootTypes['Notice'] | null; // Notice
    notices: Array<NexusGenRootTypes['Notice'] | null> | null; // [Notice]
    transactionsBond: NexusGenRootTypes['TransactionBond'][]; // [TransactionBond!]!
    transactionsCash: NexusGenRootTypes['TransactionCash'][]; // [TransactionCash!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    verificationCode: boolean; // Boolean!
  }
  TransactionBond: { // field return type
    account: NexusGenRootTypes['AccountBond'] | null; // AccountBond
    amount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    title: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  TransactionCash: { // field return type
    account: NexusGenRootTypes['AccountCash'] | null; // AccountCash
    accumulatedCash: NexusGenScalars['BigInt']; // BigInt!
    amount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    title: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  TransactionSettlement: { // field return type
    account: NexusGenRootTypes['AccountBond'] | null; // AccountBond
    additionalSettleMentAmount: NexusGenScalars['BigInt']; // BigInt!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    round: number; // Int!
    settlementAmount: NexusGenScalars['BigInt']; // BigInt!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  User: { // field return type
    accountCash: NexusGenRootTypes['AccountCash'] | null; // AccountCash
    accountsBond: NexusGenRootTypes['AccountBond'][]; // [AccountBond!]!
    alarm: Array<NexusGenRootTypes['Alarm'] | null> | null; // [Alarm]
    auth: NexusGenRootTypes['Auth'] | null; // Auth
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    favoriteCreators: Array<NexusGenRootTypes['Creator'] | null> | null; // [Creator]
    favoriteFundings: Array<NexusGenRootTypes['Funding'] | null> | null; // [Funding]
    id: number; // Int!
    nickName: string | null; // String
    role: NexusGenEnums['Role']; // Role!
    totalCumulativeInvestmentAmount: NexusGenScalars['BigInt'] | null; // BigInt
    totalCumulativeSettlementAmount: NexusGenScalars['BigInt'] | null; // BigInt
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VirtualAccount: { // field return type
    amt: string; // String!
    authDate: string; // String!
    buyerName: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: string; // String!
    goodsName: string; // String!
    id: number; // Int!
    moid: string; // String!
    tid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    vbankBankNm: string; // String!
    vbankExpDate: string; // String!
    vbankNum: string; // String!
  }
  WithdrawalAccount: { // field return type
    acntNo: string; // String!
    bankCode: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  AccountBond: { // field return type name
    balance: 'BigInt'
    createdAt: 'DateTime'
    funding: 'Funding'
    fundingId: 'Int'
    id: 'Int'
    investmentAmount: 'BigInt'
    owner: 'User'
    ownerId: 'Int'
    settlementAmount: 'BigInt'
    transactionSettlement: 'TransactionSettlement'
    transactions: 'TransactionBond'
    updatedAt: 'DateTime'
  }
  AccountCash: { // field return type name
    balance: 'BigInt'
    createdAt: 'DateTime'
    id: 'Int'
    owner: 'User'
    transactions: 'TransactionCash'
    updatedAt: 'DateTime'
  }
  Alarm: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    isConfirm: 'Boolean'
    isVisible: 'Boolean'
    sentTime: 'DateTime'
    title: 'String'
    type: 'AlarmTypes'
    updatedAt: 'DateTime'
  }
  Auth: { // field return type name
    IDVerification: 'IDVerification'
    createdAt: 'DateTime'
    email: 'String'
    id: 'Int'
    isVerified: 'Boolean'
    nickName: 'String'
    pincode: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    withdrawalAccount: 'WithdrawalAccount'
  }
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Banner: { // field return type name
    banner: 'BannerModule'
    id: 'Int'
  }
  BannerModule: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    images: 'Image'
    isVisible: 'Boolean'
    targetId: 'Int'
    title: 'String'
    types: 'BannerTypes'
    updatedAt: 'DateTime'
  }
  Contract: { // field return type name
    amountRecieved: 'BigInt'
    createdAt: 'DateTime'
    creator: 'Creator'
    endDate: 'DateTime'
    funding: 'Funding'
    id: 'Int'
    lastYearEarning: 'BigInt'
    startDate: 'DateTime'
    terms: 'Int'
    type: 'ContractTypes'
    updatedAt: 'DateTime'
  }
  Creator: { // field return type name
    birthYear: 'Int'
    channelTitle: 'String'
    channelUrl: 'String'
    contract: 'Contract'
    createdAt: 'DateTime'
    creatorMonthlyInfo: 'CreatorMonthlyInfo'
    description: 'String'
    fundings: 'Funding'
    id: 'Int'
    images: 'Image'
    isLikedUser: 'Boolean'
    isVisible: 'Boolean'
    likedUser: 'User'
    name: 'String'
    updatedAt: 'DateTime'
  }
  CreatorMonthlyInfo: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    income: 'BigInt'
    month: 'DateTime'
    subscriber: 'BigInt'
    updatedAt: 'DateTime'
    views: 'BigInt'
  }
  FAQ: { // field return type name
    answer: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    isVisible: 'Boolean'
    question: 'String'
    type: 'FAQTypes'
    updatedAt: 'DateTime'
  }
  Funding: { // field return type name
    accountInvestor: 'AccountBond'
    accountManager: 'AccountBond'
    bondPrice: 'BigInt'
    bondsTotalNumber: 'BigInt'
    contract: 'Contract'
    createdAt: 'DateTime'
    creator: 'Creator'
    currentSettlementRound: 'Int'
    description: 'FundingDescripton'
    endDate: 'DateTime'
    fundingSettlement: 'FundingSettlement'
    id: 'Int'
    images: 'Image'
    isLikedUser: 'Boolean'
    lastTransactionAmount: 'BigInt'
    likedUser: 'User'
    remainingBonds: 'BigInt'
    startDate: 'DateTime'
    status: 'FundingStatus'
    title: 'String'
    updatedAt: 'DateTime'
  }
  FundingDescripton: { // field return type name
    content: 'String'
    id: 'Int'
    title: 'String'
  }
  FundingSettlement: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    monthlySettlementAmount: 'BigInt'
    round: 'Int'
    updatedAt: 'DateTime'
  }
  IDVerification: { // field return type name
    birthDay: 'DateTime'
    certificationCode: 'String'
    createdAt: 'DateTime'
    expiration: 'DateTime'
    gender: 'Int'
    id: 'Int'
    name: 'String'
    updatedAt: 'DateTime'
  }
  Image: { // field return type name
    createdAt: 'DateTime'
    creator: 'Creator'
    filename: 'String'
    funding: 'Funding'
    height: 'Int'
    id: 'Int'
    notice: 'Notice'
    origin: 'String'
    qna: 'QnA'
    sq640: 'String'
    updatedAt: 'DateTime'
    w640: 'String'
    width: 'Int'
  }
  Mutation: { // field return type name
    OAuthLogin: 'AuthPayload'
    alterSequence: 'Boolean'
    chargeTheDeposit: 'AccountCash'
    checkAlarm: 'Boolean'
    createBanner: 'Banner'
    createBannerModule: 'BannerModule'
    createContract: 'Contract'
    createCreator: 'Creator'
    createCreatorMonthlyInfos: 'CreatorMonthlyInfo'
    createFAQ: 'FAQ'
    createFunding: 'Funding'
    createImage: 'Image'
    createNotice: 'Notice'
    createPincode: 'String'
    createQnA: 'QnA'
    createVirtualAccount: 'VirtualAccount'
    fundingSettlement: 'Funding'
    likeCreator: 'Creator'
    likeFunding: 'Funding'
    participateFunding: 'Funding'
    registerWithdrawalAccount: 'WithdrawalAccount'
    replyQuestion: 'QnA'
    signOut: 'Boolean'
    signin: 'AuthPayload'
    signup: 'AuthPayload'
    updateBannerModule: 'Boolean'
    updateContract: 'Contract'
    updateCreator: 'Boolean'
    updateCreatorMonthlyInfo: 'CreatorMonthlyInfo'
    updateFAQ: 'FAQ'
    updateFunding: 'Boolean'
    updateNotice: 'Boolean'
    updatePincode: 'String'
    updateQuestion: 'Boolean'
    updateWithdrawalAccount: 'Boolean'
    withdrawFunding: 'AccountCash'
  }
  Notice: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    images: 'Image'
    isVisible: 'Boolean'
    title: 'String'
    updatedAt: 'DateTime'
  }
  QnA: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    images: 'Image'
    isVisible: 'Boolean'
    reply: 'String'
    title: 'String'
    type: 'QnATypes'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'Int'
  }
  Query: { // field return type name
    FAQs: 'FAQ'
    QnA: 'QnA'
    QnAs: 'QnA'
    alarmCount: 'Int'
    alarms: 'Alarm'
    balanceCash: 'BigInt'
    bannerModule: 'BannerModule'
    bannerModules: 'BannerModule'
    banners: 'Banner'
    cancellationCharge: 'BigInt'
    checkPincode: 'Boolean'
    creator: 'Creator'
    creators: 'Creator'
    funding: 'Funding'
    fundings: 'Funding'
    getVirtualAccount: 'VirtualAccount'
    getWithdrawalAccount: 'WithdrawalAccount'
    myFundings: 'Funding'
    myQnA: 'QnA'
    notice: 'Notice'
    notices: 'Notice'
    transactionsBond: 'TransactionBond'
    transactionsCash: 'TransactionCash'
    user: 'User'
    users: 'User'
    verificationCode: 'Boolean'
  }
  TransactionBond: { // field return type name
    account: 'AccountBond'
    amount: 'BigInt'
    createdAt: 'DateTime'
    id: 'Int'
    title: 'String'
    type: 'TransactionType'
    updatedAt: 'DateTime'
  }
  TransactionCash: { // field return type name
    account: 'AccountCash'
    accumulatedCash: 'BigInt'
    amount: 'BigInt'
    createdAt: 'DateTime'
    id: 'Int'
    title: 'String'
    type: 'TransactionType'
    updatedAt: 'DateTime'
  }
  TransactionSettlement: { // field return type name
    account: 'AccountBond'
    additionalSettleMentAmount: 'BigInt'
    createdAt: 'DateTime'
    id: 'Int'
    round: 'Int'
    settlementAmount: 'BigInt'
    updatedAt: 'DateTime'
  }
  User: { // field return type name
    accountCash: 'AccountCash'
    accountsBond: 'AccountBond'
    alarm: 'Alarm'
    auth: 'Auth'
    createdAt: 'DateTime'
    email: 'String'
    favoriteCreators: 'Creator'
    favoriteFundings: 'Funding'
    id: 'Int'
    nickName: 'String'
    role: 'Role'
    totalCumulativeInvestmentAmount: 'BigInt'
    totalCumulativeSettlementAmount: 'BigInt'
    updatedAt: 'DateTime'
  }
  VirtualAccount: { // field return type name
    amt: 'String'
    authDate: 'String'
    buyerName: 'String'
    createdAt: 'DateTime'
    currency: 'String'
    goodsName: 'String'
    id: 'Int'
    moid: 'String'
    tid: 'String'
    updatedAt: 'DateTime'
    vbankBankNm: 'String'
    vbankExpDate: 'String'
    vbankNum: 'String'
  }
  WithdrawalAccount: { // field return type name
    acntNo: 'String'
    bankCode: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    OAuthLogin: { // args
      deviceToken: string; // String!
      email: string; // String!
      nickName?: string | null; // String
      type?: string | null; // String
    }
    alterSequence: { // args
      ids: number[]; // [Int!]!
    }
    chargeTheDeposit: { // args
      amount: number; // Int!
    }
    createBanner: { // args
      id: number; // Int!
      sequence: number; // Int!
    }
    createBannerModule: { // args
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      isVisible: boolean; // Boolean!
      targetId: number; // Int!
      title: string; // String!
      types: NexusGenEnums['BannerTypes']; // BannerTypes!
    }
    createContract: { // args
      contractInput?: NexusGenInputs['ContractInput'] | null; // ContractInput
      creatorId: number; // Int!
    }
    createCreator: { // args
      creatorInput?: NexusGenInputs['CreatorInput'] | null; // CreatorInput
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
    }
    createCreatorMonthlyInfos: { // args
      creatorId: number; // Int!
      creatorMonthlyInfoInput: NexusGenInputs['CreatorMonthlyInfoInpuTypes']; // CreatorMonthlyInfoInpuTypes!
    }
    createFAQ: { // args
      answer: string; // String!
      isVisible?: boolean | null; // Boolean
      question: string; // String!
      type: NexusGenEnums['FAQTypes']; // FAQTypes!
    }
    createFunding: { // args
      contractId: number; // Int!
      fundingInput?: NexusGenInputs['FundingInput'] | null; // FundingInput
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
    }
    createImage: { // args
      createImageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      id: number; // Int!
      type: NexusGenEnums['ImageTypes']; // ImageTypes!
    }
    createNotice: { // args
      content: string; // String!
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      title: string; // String!
    }
    createPincode: { // args
      imp_uid: string; // String!
      pincode: string; // String!
    }
    createQnA: { // args
      content: string; // String!
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      title: string; // String!
      type: NexusGenEnums['QnATypes']; // QnATypes!
    }
    createVirtualAccount: { // args
      amt: string; // String!
    }
    fundingSettlement: { // args
      amount: number; // Int!
      id: number; // Int!
    }
    likeCreator: { // args
      id: number; // Int!
    }
    likeFunding: { // args
      id: number; // Int!
    }
    participateFunding: { // args
      amount: number; // Int!
      id: number; // Int!
    }
    registerWithdrawalAccount: { // args
      acntNo: string; // String!
      bankCode: string; // String!
    }
    replyQuestion: { // args
      id: number; // Int!
      reply: string; // String!
    }
    signin: { // args
      email: string; // String!
    }
    signup: { // args
      email: string; // String!
      nickName?: string | null; // String
    }
    updateBannerModule: { // args
      id: number; // Int!
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      isVisible?: boolean | null; // Boolean
      targetId?: number | null; // Int
      types?: NexusGenEnums['BannerTypes'] | null; // BannerTypes
    }
    updateContract: { // args
      contractId: number; // Int!
      contractInput?: NexusGenInputs['ContractInput'] | null; // ContractInput
    }
    updateCreator: { // args
      creatorId: number; // Int!
      creatorInput?: NexusGenInputs['CreatorInput'] | null; // CreatorInput
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
    }
    updateCreatorMonthlyInfo: { // args
      creatorMonthlyInfoInput: NexusGenInputs['CreatorMonthlyInfoInpuTypes']; // CreatorMonthlyInfoInpuTypes!
      id: number; // Int!
    }
    updateFAQ: { // args
      answer?: string | null; // String
      id: number; // Int!
      isVisible?: boolean | null; // Boolean
      question?: string | null; // String
      type?: NexusGenEnums['FAQTypes'] | null; // FAQTypes
    }
    updateFunding: { // args
      fundingId?: number | null; // Int
      fundingInput?: NexusGenInputs['FundingInput'] | null; // FundingInput
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
    }
    updateNotice: { // args
      content?: string | null; // String
      id: number; // Int!
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      title?: string | null; // String
    }
    updatePincode: { // args
      followingPincode: string; // String!
    }
    updateQuestion: { // args
      content?: string | null; // String
      id: number; // Int!
      imageInput?: NexusGenInputs['ImageInput'] | null; // ImageInput
      title?: string | null; // String
      type?: NexusGenEnums['QnATypes'] | null; // QnATypes
    }
    updateWithdrawalAccount: { // args
      acntNo: string; // String!
      bankCode: string; // String!
      id: number; // Int!
    }
    withdrawFunding: { // args
      id: number; // Int!
    }
  }
  Query: {
    FAQs: { // args
      keyword?: string | null; // String
      skip?: number | null; // Int
      take?: number | null; // Int
      type?: NexusGenEnums['FAQTypes'] | null; // FAQTypes
    }
    QnA: { // args
      id: number; // Int!
    }
    alarms: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    bannerModule: { // args
      id: number; // Int!
    }
    cancellationCharge: { // args
      id: number; // Int!
    }
    checkPincode: { // args
      pincode: string; // String!
    }
    creator: { // args
      id: number; // Int!
    }
    creators: { // args
      isVisible?: boolean | null; // Boolean
      skip?: number | null; // Int
      sort?: string | null; // String
      take?: number | null; // Int
    }
    funding: { // args
      id: number; // Int!
    }
    fundings: { // args
      skip?: number | null; // Int
      sort?: string | null; // String
      status?: NexusGenEnums['FundingStatus'] | null; // FundingStatus
      take?: number | null; // Int
    }
    myFundings: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    notice: { // args
      id: number; // Int!
    }
    notices: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    transactionsBond: { // args
      ids?: Array<number | null> | null; // [Int]
      skip?: number | null; // Int
      take?: number | null; // Int
      type?: NexusGenEnums['TransactionType'] | null; // TransactionType
    }
    transactionsCash: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
      type?: NexusGenEnums['TransactionType'] | null; // TransactionType
    }
    verificationCode: { // args
      email: string; // String!
      verificationCode: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}